#lang racket
(define (SearchNumber values pointOne pointTwo pointThree searchNumber)
    (define pointPm (truncate (/ (+ pointOne pointThree) 2)))
    (if (> pointOne pointThree)
        (printf "El numero ~a no fue encontrado" searchNumber)
        (if (= searchNumber (list-ref values pointPm))
            (printf "El valor ~a fue encontrado en la posicion #~a." searchNumber pointPm)
            (if (> searchNumber (list-ref values pointPm))
                (SearchNumber values (+ pointPm 1) pointPm pointThree searchNumber)
                (if (< searchNumber (list-ref values pointPm))
                    (SearchNumber values pointOne pointPm (- pointPm 1) searchNumber)
                    (void)
                )
            )
        )
    )
)
(define (BinariSearch number)
    (define numberList '(1 2 3 4 5 6 7 8 9 10 11 20 30 32 34 35 65 76 78 98 102 103))
    (SearchNumber numberList 0 0 (- (length numberList) 1) number)
)